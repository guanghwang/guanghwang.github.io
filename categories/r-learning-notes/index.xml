<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R Learning Notes on Guanghua</title>
    <link>/categories/r-learning-notes/</link>
    <description>Recent content in R Learning Notes on Guanghua</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Guanghua Wang</copyright>
    <lastBuildDate>Mon, 10 Jul 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/categories/r-learning-notes/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Notes on the Constant Term in the Fixed Effect Model</title>
      <link>/post/notes-on-the-constant-term-in-the-fixed-effect-model/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/notes-on-the-constant-term-in-the-fixed-effect-model/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;

&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;In stata, the fixed effect model(&lt;code&gt;xtreg y x1 x2 x3, fe&lt;/code&gt;) report a constant term. The underline estimate is &lt;span class=&#34;math display&#34;&gt;\[y_{it} - \bar{yr} + \bar{\bar{y}} = a + (x_{it} - \bar{x_{i}} + \bar\bar{{x}})) \alpha + (\epsilon_it - \bar{e_i} + \bar{v)\]&lt;/span&gt; with the constrant &lt;span class=&#34;math inline&#34;&gt;\(\bar{v}\)&lt;/span&gt; equals to 0. Details can be found on &lt;a href=&#34;http://www.stata.com/support/faqs/statistics/intercept-in-fixed-effects-model/&#34;&gt;Stata’s website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In R, &lt;code&gt;plm&lt;/code&gt; package does not calculate the &lt;code&gt;some whate artificial&lt;/code&gt;&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; intercept for within models.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;see help(“within_intercept”, package = “plm”)&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Least Square Dummy Variable Regression V.S. Fixed Effect Model</title>
      <link>/post/least-square-dummy-variable-regression-v-s-fixed-effect-model/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/least-square-dummy-variable-regression-v-s-fixed-effect-model/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;

&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;In the panle regression setup, the coefficients in the Least Square Dummy Variable model is identical to that in the Fixed Effect Model. However, the computing time needed is much less in the Fixed Effect Model than the time in the Least Square Dummy Variable Model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(plm)) install.packages(&amp;quot;plm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: plm&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: Formula&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(plm)
if (!require(broom)) install.packages(&amp;quot;broom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: broom&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(broom)
data(package = &amp;quot;plm&amp;quot;)
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:plm&amp;#39;:
## 
##     between, lag, lead&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;data-desciption&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Desciption&lt;/h2&gt;
&lt;p&gt;I use &lt;code&gt;Males&lt;/code&gt; dataset as an example.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(Males, package = &amp;quot;plm&amp;quot;)
summary(Males)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        nr             year          school          exper       
##  Min.   :   13   Min.   :1980   Min.   : 3.00   Min.   : 0.000  
##  1st Qu.: 2329   1st Qu.:1982   1st Qu.:11.00   1st Qu.: 4.000  
##  Median : 4569   Median :1984   Median :12.00   Median : 6.000  
##  Mean   : 5262   Mean   :1984   Mean   :11.77   Mean   : 6.515  
##  3rd Qu.: 8406   3rd Qu.:1985   3rd Qu.:12.00   3rd Qu.: 9.000  
##  Max.   :12548   Max.   :1987   Max.   :16.00   Max.   :18.000  
##                                                                 
##  union         ethn      married    health          wage       
##  no :3296   other:3176   no :2446   no :4286   Min.   :-3.579  
##  yes:1064   black: 504   yes:1914   yes:  74   1st Qu.: 1.351  
##             hisp : 680                         Median : 1.671  
##                                                Mean   : 1.649  
##                                                3rd Qu.: 1.991  
##                                                Max.   : 4.052  
##                                                                
##                              industry   
##  Manufacturing                   :1231  
##  Trade                           :1169  
##  Professional_and_Related Service: 333  
##  Business_and_Repair_Service     : 331  
##  Construction                    : 327  
##  Transportation                  : 286  
##  (Other)                         : 683  
##                                occupation            residence   
##  Craftsmen, Foremen_and_kindred     :934   rural_area     :  85  
##  Operatives_and_kindred             :881   north_east     : 733  
##  Service_Workers                    :509   nothern_central: 964  
##  Clerical_and_kindred               :486   south          :1333  
##  Professional, Technical_and_kindred:453   NA&amp;#39;s           :1245  
##  Laborers_and_farmers               :401                         
##  (Other)                            :696&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(Males)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;data.frame&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the &lt;code&gt;Males&lt;/code&gt; dataset, &lt;code&gt;nr&lt;/code&gt; represents the respondents id, and &lt;code&gt;year&lt;/code&gt; is the survey year. This dataset is a panel data set.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lsdv&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LSDV&lt;/h2&gt;
&lt;p&gt;In the following comparison, I study the relationship between experience and wage. &lt;span class=&#34;math inline&#34;&gt;\(\log(wage) = \alpha + \beta exp + \gamma exp^2 + \theta Controls\)&lt;/span&gt; where the controls include &lt;code&gt;union&lt;/code&gt;, &lt;code&gt;ethnicity(ethn)&lt;/code&gt;, &lt;code&gt;health&lt;/code&gt; and &lt;code&gt;married&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t &amp;lt;- proc.time()
lsdv &amp;lt;- lm(
  log(wage) ~ exper + I(exper^2) + I(as.integer(union)) + ethn + health + married + factor(nr),
  data = Males,
  subset = wage &amp;gt;= 1
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in log(wage): NaNs produced&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lsdv.time &amp;lt;- proc.time() - t
print(lsdv.time)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   1.372   0.032   1.406&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lsdv.result &amp;lt;- tidy(lsdv)
dim(lsdv.result)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 549   5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the LSDV model, the final result includes a set of individual dummies.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::kable(head(lsdv.result, 9))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;term&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;estimate&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;std.error&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;statistic&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p.value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;(Intercept)&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2077293&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0527951&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.9346308&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000850&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;exper&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0500831&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0034919&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.3425289&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;I(exper^2)&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0017047&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0002482&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-6.8679477&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;I(as.integer(union))&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0379404&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0078563&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.8292689&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000014&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ethnblack&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2615435&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0703569&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.7173801&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0002045&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ethnhisp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1712365&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0704787&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.4296203&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0151653&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;healthyes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0049806&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0195340&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2549727&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7987594&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;marriedyes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0134629&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0073480&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.8321787&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0670109&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;factor(nr)17&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0246613&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0701815&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.3513930&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7253150&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lsdv.residual_square &amp;lt;- sum((lsdv$residuals)^2)
glance(lsdv)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   r.squared adj.r.squared     sigma statistic p.value  df   logLik
## 1 0.7123676     0.6666931 0.1353907  15.59663       0 549 2617.868
##         AIC       BIC deviance df.residual
## 1 -4135.736 -674.0087 63.25907        3451&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fixed-effect-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fixed Effect Model&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Males.panel &amp;lt;- plm.data(Males, indexes = c(&amp;quot;nr&amp;quot;, &amp;quot;year&amp;quot;))
t &amp;lt;- proc.time()
fixed_effect &amp;lt;- plm(
  log(wage) ~ exper + I(exper^2) + I(as.integer(union)) + ethn + health + married,
  data = Males.panel,
  subset = wage &amp;gt;= 1,
  effect = &amp;quot;individual&amp;quot;,
  model = &amp;quot;within&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in log(wage): NaNs produced&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fixed_effect.time &amp;lt;- proc.time() - t
print(fixed_effect.time)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   0.140   0.004   0.142&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fixed_effect.result &amp;lt;- tidy(fixed_effect)
dim(fixed_effect.result)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the fixed effect model, we only have 5 coefficients because the time-invariant variable(&lt;code&gt;ethn&lt;/code&gt;) is cancalled out in the regression.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::kable(fixed_effect.result)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;term&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;estimate&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;std.error&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;statistic&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p.value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;exper&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0500831&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0034919&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.3425289&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;I(exper^2)&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0017047&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0002482&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-6.8679477&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;I(as.integer(union))&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0379404&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0078563&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.8292689&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000014&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;healthyes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0049806&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0195340&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2549727&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7987594&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;marriedyes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0134629&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0073480&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.8321787&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0670109&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fixed_effect.residual_square &amp;lt;- sum((fixed_effect$residuals)^2)
glance(fixed_effect)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   r.squared adj.r.squared statistic       p.value deviance df.residual
## 1 0.2186536    0.09458001   193.147 6.996476e-182 63.25907        3451&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;comparison&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Comparison&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::kable(fixed_effect.result[,1:3] %&amp;gt;% left_join(lsdv.result[,1:3], by = &amp;quot;term&amp;quot;, suffix = c(&amp;quot;.fixed&amp;quot;, &amp;quot;.lsdv&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;term&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;estimate.fixed&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;std.error.fixed&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;estimate.lsdv&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;std.error.lsdv&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;exper&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0500831&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0034919&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0500831&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0034919&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;I(exper^2)&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0017047&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0002482&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0017047&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0002482&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;I(as.integer(union))&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0379404&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0078563&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0379404&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0078563&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;healthyes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0049806&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0195340&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0049806&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0195340&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;marriedyes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0134629&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0073480&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0134629&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0073480&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The results of continuous variables are (almost) numerically identical. &lt;code&gt;plm&lt;/code&gt; ajust the se by defult.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fixed_effect.residual_square - lsdv.residual_square&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 7.105427e-15&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The sum of residual squares are identical too.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(lsdv.time)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   1.372   0.032   1.406&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(fixed_effect.time)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   0.140   0.004   0.142&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lsdv.time - fixed_effect.time&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   1.232   0.028   1.264&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lsdv.time[3] / fixed_effect.time[3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  elapsed 
## 9.901408&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, fixed effect model is 13 times faster than LSDV. Notice the individuals in my sample is 545. As individuals increases, the computing time increase dramatically. (The (X + D) matrix increases accordingly).&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Quick Subset Using data.table</title>
      <link>/post/quick-subset-data-table/</link>
      <pubDate>Mon, 03 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/quick-subset-data-table/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;

&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(data.table)) install.packages(&amp;quot;data.table&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: data.table&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:data.table&amp;#39;:
## 
##     between, first, last&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyr)
library(data.table)
data(population, package = &amp;quot;tidyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I use &lt;code&gt;population&lt;/code&gt; data from &lt;code&gt;tidyr&lt;/code&gt; package as an example.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(population)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 4,060
## Variables: 3
## $ country    &amp;lt;chr&amp;gt; &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afgha...
## $ year       &amp;lt;int&amp;gt; 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 200...
## $ population &amp;lt;int&amp;gt; 17586073, 18415307, 19021226, 19496836, 19987071, 2...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(population)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    country               year        population       
##  Length:4060        Min.   :1995   Min.   :1.129e+03  
##  Class :character   1st Qu.:1999   1st Qu.:6.029e+05  
##  Mode  :character   Median :2004   Median :5.319e+06  
##                     Mean   :2004   Mean   :3.003e+07  
##                     3rd Qu.:2009   3rd Qu.:1.855e+07  
##                     Max.   :2013   Max.   :1.386e+09&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(population)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;tbl_df&amp;quot;     &amp;quot;tbl&amp;quot;        &amp;quot;data.frame&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;populationDT &amp;lt;- as.data.table(population)
class(populationDT)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;data.table&amp;quot; &amp;quot;data.frame&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;the-.sd-method-in-data.table&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The .SD Method in &lt;code&gt;data.table&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t &amp;lt;- proc.time()
tmp1 &amp;lt;- populationDT[
  , .SD[population &amp;lt; median(population)], by = c(&amp;quot;country&amp;quot;)
]
proc.time() - t&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   0.052   0.008   0.055&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-.i-methond-in-data.table&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The .I Methond in &lt;code&gt;data.table&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t &amp;lt;- proc.time()
tmp2 &amp;lt;- populationDT[
  populationDT[, .I[population &amp;lt; median(population)], by = c(&amp;quot;country&amp;quot;)]$V1
]
proc.time() - t&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   0.008   0.000   0.007&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-dplyr-method&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The &lt;code&gt;dplyr&lt;/code&gt; method&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t &amp;lt;- proc.time()
tmp3 &amp;lt;- population %&amp;gt;% 
  group_by(country) %&amp;gt;% 
  filter(population &amp;lt; median(population)) %&amp;gt;% 
  ungroup()
proc.time() - t&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   0.032   0.000   0.033&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;whether-is-the-fianl-data-identical&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Whether Is the Fianl Data Identical?&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;identical(tmp1, tmp2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;setdiff(tmp2, tmp3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Empty data.table (0 rows) of 3 cols: country,year,population&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I got same data.frame by three different methods. In terms of speed, &lt;code&gt;,I&lt;/code&gt; in &lt;code&gt;data.table&lt;/code&gt; is the fastest.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
